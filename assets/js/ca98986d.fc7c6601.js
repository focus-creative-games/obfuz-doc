"use strict";(self.webpackChunkobfuz=self.webpackChunkobfuz||[]).push([[713],{490:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"manual/run-obfuscation-standalonely","title":"\u5355\u72ec\u6267\u884c\u6df7\u6dc6","description":"\u6709\u65f6\u4f1a\u9700\u8981\u5728\u6784\u9020\u6d41\u7a0b\u4e4b\u5916\u6267\u884c\u6df7\u6dc6\u3002\u4f8b\u5982\u4f7f\u7528HybridCLR\u70ed\u66f4\u65b0\u540e\uff0c\u5e0c\u671b\u53d1\u5e03\u70ed\u66f4\u65b0\u4ee3\u7801\u524d\u5bf9\u70ed\u66f4\u65b0\u4ee3\u7801\u6267\u884c\u6df7\u6dc6\u3002","source":"@site/docs/manual/run-obfuscation-standalonely.md","sourceDirName":"manual","slug":"/manual/run-obfuscation-standalonely","permalink":"/docs/manual/run-obfuscation-standalonely","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/manual/run-obfuscation-standalonely.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u6784\u5efa\u8fc7\u7a0b\u4e2d\u6267\u884c\u6df7\u6dc6","permalink":"/docs/manual/build-pipeline"},"next":{"title":"\u589e\u91cf\u6df7\u6dc6\u4e0e\u4ee3\u7801\u70ed\u66f4\u65b0","permalink":"/docs/manual/incremental-obfuscation-and-hotupdate"}}');var s=n(4848),r=n(8453);const a={},o="\u5355\u72ec\u6267\u884c\u6df7\u6dc6",l={},u=[{value:"\u751f\u6210\u9700\u8981\u88ab\u6df7\u6dc6\u7684dll",id:"\u751f\u6210\u9700\u8981\u88ab\u6df7\u6dc6\u7684dll",level:2},{value:"\u4ee3\u7801\u5b9e\u73b0",id:"\u4ee3\u7801\u5b9e\u73b0",level:2}];function c(t){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"\u5355\u72ec\u6267\u884c\u6df7\u6dc6",children:"\u5355\u72ec\u6267\u884c\u6df7\u6dc6"})}),"\n",(0,s.jsx)(e.p,{children:"\u6709\u65f6\u4f1a\u9700\u8981\u5728\u6784\u9020\u6d41\u7a0b\u4e4b\u5916\u6267\u884c\u6df7\u6dc6\u3002\u4f8b\u5982\u4f7f\u7528HybridCLR\u70ed\u66f4\u65b0\u540e\uff0c\u5e0c\u671b\u53d1\u5e03\u70ed\u66f4\u65b0\u4ee3\u7801\u524d\u5bf9\u70ed\u66f4\u65b0\u4ee3\u7801\u6267\u884c\u6df7\u6dc6\u3002"}),"\n",(0,s.jsx)(e.h2,{id:"\u751f\u6210\u9700\u8981\u88ab\u6df7\u6dc6\u7684dll",children:"\u751f\u6210\u9700\u8981\u88ab\u6df7\u6dc6\u7684dll"}),"\n",(0,s.jsx)(e.p,{children:"\u6e90\u7801\u5f62\u5f0f\u7684\u7a0b\u5e8f\u96c6\u9700\u8981\u5148\u7f16\u8bd1\u4e3adll\u624d\u80fd\u88abObfuz\u6df7\u6dc6\u3002\u5bf9\u4e8eUnity\u5de5\u7a0b\u5185\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u5b9e\u73b0\u7f16\u8bd1dll\uff1a"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-csharp",children:'\npublic class ObfusacteTool\n{\n  public static void CompileDll(string buildDir, BuildTarget target, bool developmentBuild)\n  {\n    var group = BuildPipeline.GetBuildTargetGroup(target);\n\n    ScriptCompilationSettings scriptCompilationSettings = new ScriptCompilationSettings();\n    scriptCompilationSettings.group = group;\n    scriptCompilationSettings.target = target;\n    scriptCompilationSettings.options = developmentBuild ? ScriptCompilationOptions.DevelopmentBuild : ScriptCompilationOptions.None;\n    Directory.CreateDirectory(buildDir);\n    ScriptCompilationResult scriptCompilationResult = PlayerBuildInterface.CompilePlayerScripts(scriptCompilationSettings, buildDir);\n#if UNITY_2022\n    UnityEditor.EditorUtility.ClearProgressBar();\n#endif\n    Debug.Log($"compile finish!!! buildDir:{buildDir} target:{target} development:{developmentBuild}");\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\u4ee3\u7801\u5b9e\u73b0",children:"\u4ee3\u7801\u5b9e\u73b0"}),"\n",(0,s.jsx)(e.p,{children:"\u6df7\u6dc6\u524d\u8bf7\u5148\u7f16\u8bd1\u597ddll\u3002"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-csharp",children:'\nusing HybridCLR.Editor;\nusing Obfuz.Settings;\nusing Obfuz;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing UnityEditor;\nusing HybridCLR.Editor.Commands;\nusing HybridCLR.Editor.Installer;\nusing System.IO;\nusing HybridCLR.Editor.ABI;\nusing UnityEngine;\n\n\npublic static class ObfuscateUtil\n{\n    public static bool AreSameDirectory(string path1, string path2)\n    {\n        try\n        {\n            var dir1 = new DirectoryInfo(path1);\n            var dir2 = new DirectoryInfo(path2);\n\n            // \u6bd4\u8f83\u5b8c\u6574\u8def\u5f84\uff08\u8003\u8651\u7b26\u53f7\u94fe\u63a5\uff09\n            return dir1.FullName.TrimEnd(\'\\\\\') == dir2.FullName.TrimEnd(\'\\\\\');\n        }\n        catch\n        {\n            return false;\n        }\n    }\n\n    public static void Obfuscate(BuildTarget target, List<string> assemblySearchPaths, string outputPath)\n    {\n        var obfuzSettings = ObfuzSettings.Instance;\n\n        var assemblySearchDirs = assemblySearchPaths;\n        ObfuscatorBuilder builder = ObfuscatorBuilder.FromObfuzSettings(obfuzSettings, target, true);\n        builder.InsertTopPriorityAssemblySearchPaths(assemblySearchDirs);\n\n        string obfuscatedAssemblyOutputPath = obfuzSettings.GetObfuscatedAssemblyOutputPath(target);\n        if (AreSameDirectory(outputPath, obfuscatedAssemblyOutputPath))\n        {\n            throw new Exception($"outputPath:{outputPath} can\'t be same to ObfuscatedAssemblyOutputPath:{obfuscatedAssemblyOutputPath}");\n        }\n        foreach (var assemblySearchDir in builder.AssemblySearchPaths)\n        {\n            if (AreSameDirectory(assemblySearchDir, obfuscatedAssemblyOutputPath))\n            {\n                throw new Exception($"assemblySearchDir:{assemblySearchDir} can\'t be same to ObfuscatedAssemblyOutputPath:{obfuscatedAssemblyOutputPath}");\n            }\n        }\n\n        Obfuscator obfuz = builder.Build();\n        obfuz.Run();\n\n        Directory.CreateDirectory(outputPath);\n        foreach (string srcFile in Directory.GetFiles(obfuscatedAssemblyOutputPath, "*.dll"))\n        {\n            string fileName = Path.GetFileName(srcFile);\n            string destFile = $"{outputPath}/{fileName}";\n            File.Copy(srcFile, destFile, true);\n            Debug.Log($"Copy {srcFile} to {destFile}");\n        }\n    }\n}\n\n\n'})}),"\n",(0,s.jsxs)(e.p,{children:["Obfuscator\u6267\u884c\u8fc7\u7a0b\u4e0d\u4f1a\u89e6\u53d1",(0,s.jsx)(e.code,{children:"Obfuz.Unity.ObfuscationBeginEventArgs"}),"\u548c",(0,s.jsx)(e.code,{children:"Obfuz.Unity.ObfuscationEndEventArgs"}),"\uff0c\u56e0\u4e3a\u6ca1\u4ec0\u4e48\u5fc5\u8981\u3002"]})]})}function d(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(c,{...t})}):c(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>a,x:()=>o});var i=n(6540);const s={},r=i.createContext(s);function a(t){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:a(t.components),i.createElement(r.Provider,{value:e},t.children)}}}]);