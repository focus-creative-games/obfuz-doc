"use strict";(self.webpackChunkobfuz=self.webpackChunkobfuz||[]).push([[3968],{6783:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>r,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"beginner/multi-assemblies-to-obfuscate","title":"Multiple Obfuscated Assemblies","description":"This example demonstrates how to use multiple obfuscated and non-obfuscated assemblies. For the complete sample project, see MultiObfuscatedAssemblies.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/beginner/multi-assemblies-to-obfuscate.md","sourceDirName":"beginner","slug":"/beginner/multi-assemblies-to-obfuscate","permalink":"/en/docs/beginner/multi-assemblies-to-obfuscate","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/beginner/multi-assemblies-to-obfuscate.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Quick Start","permalink":"/en/docs/beginner/quick-start"},"next":{"title":"Custom Obfuscation Rules","permalink":"/en/docs/beginner/configuration"}}');var i=s(4848),l=s(8453);const a={},c="Multiple Obfuscated Assemblies",o={},d=[{value:"Create Unity Project and Assemblies",id:"create-unity-project-and-assemblies",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Generate Encryption Virtual Machine and Keys",id:"generate-encryption-virtual-machine-and-keys",level:2},{value:"Build &amp; Run",id:"build--run",level:2},{value:"Obfuscated Code",id:"obfuscated-code",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"multiple-obfuscated-assemblies",children:"Multiple Obfuscated Assemblies"})}),"\n",(0,i.jsxs)(n.p,{children:["This example demonstrates how to use multiple obfuscated and non-obfuscated assemblies. For the complete sample project, see ",(0,i.jsx)(n.a,{href:"https://github.com/focus-creative-games/obfuz-samples/tree/main/MultiObfuscatedAssemblies",children:"MultiObfuscatedAssemblies"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The sample project contains the following assemblies:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"NonObfus1: A non-obfuscated assembly that doesn't reference any obfuscated assemblies"}),"\n",(0,i.jsx)(n.li,{children:"Obfus1: An obfuscated assembly that references NonObfus1"}),"\n",(0,i.jsx)(n.li,{children:"Obfus2: An obfuscated assembly that references Obfus1"}),"\n",(0,i.jsx)(n.li,{children:"NonObfus2: A non-obfuscated assembly that references Obfus2"}),"\n",(0,i.jsx)(n.li,{children:"Assembly-CSharp: An obfuscated assembly that references all the above assemblies"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"create-unity-project-and-assemblies",children:"Create Unity Project and Assemblies"}),"\n",(0,i.jsx)(n.p,{children:"Please refer to the sample project."}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["NonObfus1 doesn't need to be added to the ",(0,i.jsx)(n.code,{children:"AssemblySettings.NonObfuscatedButReferenceingObfuscatedAssemblies"})," list because it doesn't reference any obfuscated assemblies."]})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Open the ",(0,i.jsx)(n.code,{children:"ObfuzSettings"})," window"]}),"\n",(0,i.jsxs)(n.li,{children:["Add Obfus1, Obfus2, and Assembly-CSharp to the ",(0,i.jsx)(n.code,{children:"AssemblySettings.AssembliesToObfuscate"})," list"]}),"\n",(0,i.jsxs)(n.li,{children:["Add NonObfus2 to the ",(0,i.jsx)(n.code,{children:"AssemblySettings.NonObfuscatedButReferenceingObfuscatedAssemblies"})," list"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"generate-encryption-virtual-machine-and-keys",children:"Generate Encryption Virtual Machine and Keys"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Run the menu ",(0,i.jsx)(n.code,{children:"Obfuz/GenerateEncryptionVM"})," to generate encryption virtual machine code. The default generated code file is ",(0,i.jsx)(n.code,{children:"Assets/Obfuz/GeneratedEncryptionVirtualMachine.cs"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Run the menu ",(0,i.jsx)(n.code,{children:"Obfuz/GenerateSecretKeyFile"})," to generate two key files. The default output files are ",(0,i.jsx)(n.code,{children:"Assets/Resources/Obfuz/defaultStaticSecretKey.bytes"})," and ",(0,i.jsx)(n.code,{children:"Assets/Resources/Obfuz/defaultDynamicSecretKey.bytes"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"build--run",children:"Build & Run"}),"\n",(0,i.jsxs)(n.p,{children:["Click ",(0,i.jsx)(n.code,{children:"Build And Run"})," in the ",(0,i.jsx)(n.code,{children:"Player Settings"})," window."]}),"\n",(0,i.jsx)(n.h2,{id:"obfuscated-code",children:"Obfuscated Code"}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.a,{href:"https://github.com/icsharpcode/ILSpy",children:"ILSpy"})," to open ",(0,i.jsx)(n.code,{children:"Library/Obfuz/{buildTarget}/ObfuscatedAssemblies/Assembly-CSharp.dll"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"\n// Code of class A in NonObfus1.\n// Since NonObfus1 is a non-obfuscated assembly, the code remains unchanged.\n\npublic class A\n{\n    public int x;\n\n    public void Run()\n    {\n        x++;\n    }\n}\n\n\n// Obfuscated code of class C in Obfus1\n\n\nusing $A;\n\npublic class $a\n{\n    public int $a;\n\n    public void $A(A 1)\n    {\n        $a = 1.x + $D<global::$A.$d>.$I($C.$A, 0, 14, -2097817526);\n    }\n}\n\n// Obfuscated code of class D in Obfus2\n\nusing $A;\n\npublic class $a\n{\n    public int $a;\n\n    public void $A(A 1, $a 1)\n    {\n        $a = 1.x + $D<$d>.$I(global::$C.$A, 0, 14, -2097817526);\n        $a = 1.$a + $D<$d>.$I(global::$C.$A, 4, 170, -1447182571);\n    }\n}\n\n\n// Code of class B in NonObfus2\n\npublic class B\n{\n    public int x;\n\n    public void Run(A a, $a c, $a d)\n    {\n        x += a.x + 1;\n        x += c.$a + 2;\n        x += d.$a + 3;\n    }\n}\n\n// Code of class All in Assembly-CSharp.\n// Since All is a subclass of MonoBehaviour, its class name and fields are not obfuscated.\n\nusing $A;\nusing UnityEngine;\n\npublic class All : MonoBehaviour\n{\n    public int x;\n\n    public void $a(A 1, B 1, global::$a 1, global::$a 1)\n    {\n        x += 1.x + $D<$d>.$I(global::$C.$A, 0, 14, -2097817526);\n        x += 1.x + $D<$d>.$I(global::$C.$A, 4, 170, -1447182571);\n        x += 1.$a + $D<$d>.$I(global::$C.$A, 8, 226, 1350853308);\n        x += 1.$a + $D<$d>.$I(global::$C.$A, 12, 127, 2018297415);\n    }\n}\n\n"})})]})}function r(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var t=s(6540);const i={},l=t.createContext(i);function a(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);