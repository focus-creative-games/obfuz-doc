"use strict";(self.webpackChunkobfuz=self.webpackChunkobfuz||[]).push([[9973],{1207:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"beginner/work-with-hybridclr","title":"Obfuz+HybridCLR","description":"This project demonstrates how to use Obfuz with HybridCLR. For the complete sample project, see WorkWithHybridCLR.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/beginner/work-with-hybridclr.md","sourceDirName":"beginner","slug":"/beginner/work-with-hybridclr","permalink":"/en/docs/beginner/work-with-hybridclr","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/beginner/work-with-hybridclr.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Using Dynamic Secret Key","permalink":"/en/docs/beginner/dynamic-secret-key"},"next":{"title":"Obfuz+XLua","permalink":"/en/docs/beginner/work-with-xlua"}}');var s=n(4848),r=n(8453);const d={},o="Obfuz+HybridCLR",a={},l=[{value:"Installation",id:"installation",level:2},{value:"Create Code",id:"create-code",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Add Build Code for Obfuscating Hot Update Code",id:"add-build-code-for-obfuscating-hot-update-code",level:2},{value:"Generate Encryption Virtual Machine and Keys",id:"generate-encryption-virtual-machine-and-keys",level:2},{value:"Generate HybridCLR Related Code",id:"generate-hybridclr-related-code",level:2},{value:"Generate Obfuscated Hot Update Assemblies and Copy to StreamingAssets Directory",id:"generate-obfuscated-hot-update-assemblies-and-copy-to-streamingassets-directory",level:2},{value:"Build &amp; Run",id:"build--run",level:2},{value:"View Obfuscated HotUpdate Assembly",id:"view-obfuscated-hotupdate-assembly",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"obfuzhybridclr",children:"Obfuz+HybridCLR"})}),"\n",(0,s.jsxs)(t.p,{children:["This project demonstrates how to use Obfuz with HybridCLR. For the complete sample project, see ",(0,s.jsx)(t.a,{href:"https://github.com/focus-creative-games/obfuz-samples/tree/main/WorkWithHybridCLR",children:"WorkWithHybridCLR"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["For detailed documentation, see ",(0,s.jsx)(t.a,{href:"../manual/hybridclr/work-with-hybridclr",children:"Working with HybridCLR"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(t.p,{children:"Install the following plugins:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["com.code-philosophy.hybridclr ",(0,s.jsx)(t.code,{children:"https://github.com/focus-creative-games/hybridclr_unity.git"})]}),"\n",(0,s.jsxs)(t.li,{children:["com.code-philosophy.obfuz ",(0,s.jsx)(t.code,{children:"https://github.com/focus-creative-games/obfuz.git"})]}),"\n",(0,s.jsxs)(t.li,{children:["com.code-philosophy.obfuz4hybridclr ",(0,s.jsx)(t.code,{children:"https://github.com/focus-creative-games/obfuz4hybridclr.git"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"obufz4hybridclr is an Obfuz extension package for supporting HybridCLR hot update workflows."}),"\n",(0,s.jsx)(t.admonition,{type:"warning",children:(0,s.jsx)(t.p,{children:"Both Obfuz and HybridCLR plugins include the dnlib plugin. For Unity, having the same plugin name in two packages will cause errors.\nThe solution is to install one of the plugins (not necessarily both) locally: download Obfuz or HybridCLR to your local machine, remove the included dnlib.dll, and then place it in the Packages directory."})}),"\n",(0,s.jsx)(t.h2,{id:"create-code",children:"Create Code"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Create a HotUpdate assembly and create a type Entry within it"}),"\n",(0,s.jsxs)(t.li,{children:["Create a ",(0,s.jsx)(t.code,{children:"Bootstrap.cs"})," class in the Assets directory"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"For detailed code content, see the sample project."}),"\n",(0,s.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Add HotUpdate to the hot update assembly list in ",(0,s.jsx)(t.code,{children:"HybridCLRSettings"})]}),"\n",(0,s.jsxs)(t.li,{children:["Add HotUpdate and Assembly-CSharp to the ",(0,s.jsx)(t.code,{children:"ObfuzSettings.AssembliesToObfuscate"})," list"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"add-build-code-for-obfuscating-hot-update-code",children:"Add Build Code for Obfuscating Hot Update Code"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",children:'using HybridCLR.Editor;\nusing HybridCLR.Editor.Commands;\nusing Obfuz.Settings;\nusing Obfuz4HybridCLR;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.IO;\nusing UnityEditor;\nusing UnityEngine;\n\npublic static class BuildCommand\n{\n    [MenuItem("Build/CompileAndObfuscateAndCopyToStreamingAssets")]\n    public static void CompileAndObfuscateAndCopyToStreamingAssets()\n    {\n        BuildTarget target = EditorUserBuildSettings.activeBuildTarget;\n        CompileDllCommand.CompileDll(target);\n\n        string obfuscatedHotUpdateDllPath = PrebuildCommandExt.GetObfuscatedHotUpdateAssemblyOutputPath(target);\n        ObfuscateUtil.ObfuscateHotUpdateAssemblies(target, obfuscatedHotUpdateDllPath);\n\n        Directory.CreateDirectory(Application.streamingAssetsPath);\n\n        string hotUpdateDllPath = $"{SettingsUtil.GetHotUpdateDllsOutputDirByTarget(target)}";\n        List<string> obfuscationRelativeAssemblyNames = ObfuzSettings.Instance.assemblySettings.GetObfuscationRelativeAssemblyNames();\n\n        foreach (string assName in SettingsUtil.HotUpdateAssemblyNamesIncludePreserved)\n        {\n            string srcDir = obfuscationRelativeAssemblyNames.Contains(assName) ? obfuscatedHotUpdateDllPath : hotUpdateDllPath;\n            string srcFile = $"{srcDir}/{assName}.dll";\n            string dstFile = $"{Application.streamingAssetsPath}/{assName}.dll.bytes";\n            if (File.Exists(srcFile))\n            {\n                File.Copy(srcFile, dstFile, true);\n                Debug.Log($"[CompileAndObfuscate] Copy {srcFile} to {dstFile}");\n            }\n        }\n    }\n}\n\n'})}),"\n",(0,s.jsx)(t.h2,{id:"generate-encryption-virtual-machine-and-keys",children:"Generate Encryption Virtual Machine and Keys"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Run the menu ",(0,s.jsx)(t.code,{children:"Obfuz/GenerateEncryptionVM"})," to generate encryption virtual machine code. The default generated code file is ",(0,s.jsx)(t.code,{children:"Assets/Obfuz/GeneratedEncryptionVirtualMachine.cs"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Run the menu ",(0,s.jsx)(t.code,{children:"Obfuz/GenerateSecretKeyFile"})," to generate two key files. The default output files are ",(0,s.jsx)(t.code,{children:"Assets/Resources/Obfuz/defaultStaticSecretKey.bytes"})," and ",(0,s.jsx)(t.code,{children:"Assets/Resources/Obfuz/defaultDynamicSecretKey.bytes"})]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"generate-hybridclr-related-code",children:"Generate HybridCLR Related Code"}),"\n",(0,s.jsxs)(t.p,{children:["HybridCLR's default ",(0,s.jsx)(t.code,{children:"HybridCLR/Generate/All"})," command generates link.xml based on unobfuscated assemblies. If some AOT assemblies are obfuscated, the types and functions preserved in link.xml generated based on unobfuscated code are the names before obfuscation.\nThis causes link.xml to not truly preserve those obfuscated AOT types and functions. After building, running hot update code may result in types and functions being stripped."]}),"\n",(0,s.jsxs)(t.p,{children:["The solution is to use the ",(0,s.jsx)(t.code,{children:"HybridCLR/ObfuzExtension/GenerateAll"})," command specifically provided by Obfuz4HybridCLR."]}),"\n",(0,s.jsxs)(t.p,{children:["Run ",(0,s.jsx)(t.code,{children:"HybridCLR/ObfuzExtension/GenerateAll"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"generate-obfuscated-hot-update-assemblies-and-copy-to-streamingassets-directory",children:"Generate Obfuscated Hot Update Assemblies and Copy to StreamingAssets Directory"}),"\n",(0,s.jsxs)(t.p,{children:["Run ",(0,s.jsx)(t.code,{children:"Build/CompileAndObfuscateAndCopyToStreamingAssets"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"build--run",children:"Build & Run"}),"\n",(0,s.jsxs)(t.p,{children:["Run ",(0,s.jsx)(t.code,{children:"Build And Run"})," in ",(0,s.jsx)(t.code,{children:"Build Settings"})," to build and run. Check the player.log to verify that it is running correctly."]}),"\n",(0,s.jsx)(t.h2,{id:"view-obfuscated-hotupdate-assembly",children:"View Obfuscated HotUpdate Assembly"}),"\n",(0,s.jsxs)(t.p,{children:["Open the output directory from the previous ",(0,s.jsx)(t.code,{children:"Build & Run"})," step, and use ",(0,s.jsx)(t.a,{href:"https://github.com/icsharpcode/ILSpy",children:"ILSpy"})," to open ",(0,s.jsx)(t.code,{children:"ObfuzDemo_Data\\StreamingAssets\\HotUpdate.dll.bytes"}),"\nto view the obfuscated assembly."]}),"\n",(0,s.jsx)(t.p,{children:"The obfuscated code of the Entry class is as follows:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",children:"using $A;\nusing UnityEngine;\n\npublic class Entry : MonoBehaviour\n{\n    private void Start()\n    {\n        $c.$a($A.$C<$A.$c>.$K($d.$A, 0, 11, 32, 862320345), $A.$C<$A.$c>.$d(1718597184, 154, 2114032877));\n    }\n\n    private void Update()\n    {\n    }\n}\n\n\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>o});var i=n(6540);const s={},r=i.createContext(s);function d(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);