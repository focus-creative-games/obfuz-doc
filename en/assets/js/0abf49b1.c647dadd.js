"use strict";(self.webpackChunkobfuz=self.webpackChunkobfuz||[]).push([[1536],{9027:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"latest","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/en/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Quick Start","href":"/en/docs/beginner/quick-start","docId":"beginner/quick-start","unlisted":false},{"type":"link","label":"Multiple Obfuscated Assemblies","href":"/en/docs/beginner/multi-assemblies-to-obfuscate","docId":"beginner/multi-assemblies-to-obfuscate","unlisted":false},{"type":"link","label":"Custom Obfuscation Rules","href":"/en/docs/beginner/configuration","docId":"beginner/configuration","unlisted":false},{"type":"link","label":"Using Dynamic Secret Key","href":"/en/docs/beginner/dynamic-secret-key","docId":"beginner/dynamic-secret-key","unlisted":false},{"type":"link","label":"Obfuz+HybridCLR","href":"/en/docs/beginner/work-with-hybridclr","docId":"beginner/work-with-hybridclr","unlisted":false},{"type":"link","label":"Obfuz+XLua","href":"/en/docs/beginner/work-with-xlua","docId":"beginner/work-with-xlua","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/en/docs/getting-started"},{"type":"category","label":"Manual","items":[{"type":"link","label":"Installation","href":"/en/docs/manual/installation","docId":"manual/installation","unlisted":false},{"type":"link","label":"Configuration","href":"/en/docs/manual/configuration","docId":"manual/configuration","unlisted":false},{"type":"link","label":"Editor Menu","href":"/en/docs/manual/menu","docId":"manual/menu","unlisted":false},{"type":"link","label":"Assemblies","href":"/en/docs/manual/assembly","docId":"manual/assembly","unlisted":false},{"type":"link","label":"Encryption","href":"/en/docs/manual/encryption","docId":"manual/encryption","unlisted":false},{"type":"link","label":"Method Body Obfuscation","href":"/en/docs/manual/method-body-obfuscation","docId":"manual/method-body-obfuscation","unlisted":false},{"type":"link","label":"Obfuscation Pass","href":"/en/docs/manual/obfuscation-pass","docId":"manual/obfuscation-pass","unlisted":false},{"type":"link","label":"Obfuz CustomAttributes","href":"/en/docs/manual/customattributes","docId":"manual/customattributes","unlisted":false},{"type":"link","label":"Obfuscation Instincts","href":"/en/docs/manual/obfuscation-instincts","docId":"manual/obfuscation-instincts","unlisted":false},{"type":"link","label":"Symbol Obfuscation","href":"/en/docs/manual/symbol-obfuscation","docId":"manual/symbol-obfuscation","unlisted":false},{"type":"link","label":"Constant Encryption","href":"/en/docs/manual/const-encryption","docId":"manual/const-encryption","unlisted":false},{"type":"link","label":"Remove Const Fields","href":"/en/docs/manual/remove-const-field","docId":"manual/remove-const-field","unlisted":false},{"type":"link","label":"Field Encryption","href":"/en/docs/manual/field-encryption","docId":"manual/field-encryption","unlisted":false},{"type":"link","label":"Eval Stack Obfuscation","href":"/en/docs/manual/eval-stack-obfuscation","docId":"manual/eval-stack-obfuscation","unlisted":false},{"type":"link","label":"Expression Obfuscation","href":"/en/docs/manual/expr-obfuscation","docId":"manual/expr-obfuscation","unlisted":false},{"type":"link","label":"Function Call Obfuscation","href":"/en/docs/manual/call-obfuscation","docId":"manual/call-obfuscation","unlisted":false},{"type":"link","label":"Control Flow Obfuscation","href":"/en/docs/manual/control-flow-obfuscation","docId":"manual/control-flow-obfuscation","unlisted":false},{"type":"link","label":"Code Watermark","href":"/en/docs/manual/watermark","docId":"manual/watermark","unlisted":false},{"type":"link","label":"Garbage Code Generation","href":"/en/docs/manual/garbage-code-generation","docId":"manual/garbage-code-generation","unlisted":false},{"type":"link","label":"Obfuscation During Build Process","href":"/en/docs/manual/build-pipeline","docId":"manual/build-pipeline","unlisted":false},{"type":"link","label":"Run Obfuscation Standalone","href":"/en/docs/manual/run-obfuscation-standalonely","docId":"manual/run-obfuscation-standalonely","unlisted":false},{"type":"link","label":"Incremental Obfuscation and Hot Update","href":"/en/docs/manual/incremental-obfuscation-and-hotupdate","docId":"manual/incremental-obfuscation-and-hotupdate","unlisted":false},{"type":"link","label":"Serialization","href":"/en/docs/manual/serialization","docId":"manual/serialization","unlisted":false},{"type":"link","label":"Reflection","href":"/en/docs/manual/reflection","docId":"manual/reflection","unlisted":false},{"type":"link","label":"Impact on Assembly Size","href":"/en/docs/manual/impact-dll-size","docId":"manual/impact-dll-size","unlisted":false},{"type":"category","label":"HybridCLR","items":[{"type":"link","label":"Working with HybridCLR","href":"/en/docs/manual/hybridclr/work-with-hybridclr","docId":"manual/hybridclr/work-with-hybridclr","unlisted":false},{"type":"link","label":"Polymorphic DLL Files","href":"/en/docs/manual/hybridclr/polymorphic-dll","docId":"manual/hybridclr/polymorphic-dll","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/en/docs/manual/hybridclr"},{"type":"category","label":"xLua","items":[{"type":"link","label":"Working with XLua","href":"/en/docs/manual/xlua/work-with-xlua","docId":"manual/xlua/work-with-xlua","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/en/docs/manual/xlua"},{"type":"link","label":"Deobfuscate Stack Trace","href":"/en/docs/manual/deobfuscate-stacktrace","docId":"manual/deobfuscate-stacktrace","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/en/docs/manual"},{"type":"category","label":"Help","items":[{"type":"link","label":"Frequently Asked Questions","href":"/en/docs/help/faq","docId":"help/faq","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/en/docs/help"},{"type":"link","label":"Release Log","href":"/en/docs/help/releaselog","docId":"help/releaselog","unlisted":false}]},"docs":{"beginner/configuration":{"id":"beginner/configuration","title":"Custom Obfuscation Rules","description":"This example demonstrates how to configure obfuscation rule files. For the complete sample project, see CustomConfigure.","sidebar":"tutorialSidebar"},"beginner/dynamic-secret-key":{"id":"beginner/dynamic-secret-key","title":"Using Dynamic Secret Key","description":"Dynamic secrets are suitable for modules that execute their logic after running for a period of time, often used in hot update assemblies. For detailed documentation, see Encryption.","sidebar":"tutorialSidebar"},"beginner/multi-assemblies-to-obfuscate":{"id":"beginner/multi-assemblies-to-obfuscate","title":"Multiple Obfuscated Assemblies","description":"This example demonstrates how to use multiple obfuscated and non-obfuscated assemblies. For the complete sample project, see MultiObfuscatedAssemblies.","sidebar":"tutorialSidebar"},"beginner/quick-start":{"id":"beginner/quick-start","title":"Quick Start","description":"Obfuz supports Unity 2019+ and Unite Engine 1.0.0+, working correctly on all platforms supported by Unity and Unite Engine.","sidebar":"tutorialSidebar"},"beginner/work-with-hybridclr":{"id":"beginner/work-with-hybridclr","title":"Obfuz+HybridCLR","description":"This project demonstrates how to use Obfuz with HybridCLR. For the complete sample project, see WorkWithHybridCLR.","sidebar":"tutorialSidebar"},"beginner/work-with-xlua":{"id":"beginner/work-with-xlua","title":"Obfuz+XLua","description":"This project demonstrates how to use Obfuz with XLua. For the complete sample project, see WorkWithXLua.","sidebar":"tutorialSidebar"},"help/faq":{"id":"help/faq","title":"Frequently Asked Questions","description":"Exceptions During Build or Manual Obfuscation","sidebar":"tutorialSidebar"},"help/releaselog":{"id":"help/releaselog","title":"Release Log","description":"- 2025.5.25 Released beta2 version","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"License: MIT","sidebar":"tutorialSidebar"},"manual/assembly":{"id":"manual/assembly","title":"Assemblies","description":"Assembly Types","sidebar":"tutorialSidebar"},"manual/build-pipeline":{"id":"manual/build-pipeline","title":"Obfuscation During Build Process","description":"Obfuz automatically performs obfuscation during Unity\'s build process.","sidebar":"tutorialSidebar"},"manual/call-obfuscation":{"id":"manual/call-obfuscation","title":"Function Call Obfuscation","description":"Function call obfuscation disguises how functions (static, member, or virtual) are called in code. After decompilation, it\'s impossible to directly know which function is being executed, effectively protecting code security.","sidebar":"tutorialSidebar"},"manual/configuration":{"id":"manual/configuration","title":"Configuration","description":"Obfuz provides extremely rich configuration options and flexible obfuscation rule configuration files to support various complex requirements of commercial game projects.","sidebar":"tutorialSidebar"},"manual/const-encryption":{"id":"manual/const-encryption","title":"Constant Encryption","description":"Encrypting constants that appear in code can effectively protect code security.","sidebar":"tutorialSidebar"},"manual/control-flow-obfuscation":{"id":"manual/control-flow-obfuscation","title":"Control Flow Obfuscation","description":"Control flow obfuscation can obfuscate the direction of code control flow, making it difficult to analyze the actual execution flow of code.","sidebar":"tutorialSidebar"},"manual/customattributes":{"id":"manual/customattributes","title":"Obfuz CustomAttributes","description":"Obfuz provides various CustomAttributes for conveniently configuring obfuscation rules directly in code. Currently supported CustomAttributes include:","sidebar":"tutorialSidebar"},"manual/deobfuscate-stacktrace":{"id":"manual/deobfuscate-stacktrace","title":"Deobfuscate Stack Trace","description":"After obfuscation, the function stack in logs output from code uses obfuscated names, which creates significant obstacles for tracking issues. Manually restoring the original stack by comparing the symbol mapping file (see Symbol Obfuscation documentation) that records the mapping relationship between original functions and obfuscated functions is very tedious. Obfuz provides the DeobfuscateStackTrace tool to automate the restoration of obfuscated stacks.","sidebar":"tutorialSidebar"},"manual/encryption":{"id":"manual/encryption","title":"Encryption","description":"Encryption is the core mechanism of Obfuz. Most Obfuscation Passes are related to encryption for the following reasons:","sidebar":"tutorialSidebar"},"manual/eval-stack-obfuscation":{"id":"manual/eval-stack-obfuscation","title":"Eval Stack Obfuscation","description":"Randomly obfuscate the execution stack during virtual machine runtime to increase reverse engineering difficulty.","sidebar":"tutorialSidebar"},"manual/expr-obfuscation":{"id":"manual/expr-obfuscation","title":"Expression Obfuscation","description":"Obfuscate expressions appearing in code to increase reverse engineering difficulty.","sidebar":"tutorialSidebar"},"manual/field-encryption":{"id":"manual/field-encryption","title":"Field Encryption","description":"Encrypting field values can effectively prevent malicious attackers from using memory modification techniques to protect code security.","sidebar":"tutorialSidebar"},"manual/garbage-code-generation":{"id":"manual/garbage-code-generation","title":"Garbage Code Generation","description":"Garbage code generation can reduce binary code similarity between apps and other apps, used to counter app store similarity reviews.","sidebar":"tutorialSidebar"},"manual/hybridclr/polymorphic-dll":{"id":"manual/hybridclr/polymorphic-dll","title":"Polymorphic DLL Files","description":"By default, Assembly.Load requires passing in standard dll files, meaning malicious crackers can obtain complete original dll files or load malicious third-party dlls, creating significant security risks for developers.","sidebar":"tutorialSidebar"},"manual/hybridclr/work-with-hybridclr":{"id":"manual/hybridclr/work-with-hybridclr","title":"Working with HybridCLR","description":"HybridCLR workflow does not consider code obfuscation scenarios, so using it directly will encounter some issues.","sidebar":"tutorialSidebar"},"manual/impact-dll-size":{"id":"manual/impact-dll-size","title":"Impact on Assembly Size","description":"Since obfuscation modifies dll code, the assembly size will change after obfuscation. Generally speaking, except for Symbol Obfus which reduces assembly size, all other obfuscation passes will increase assembly size, but each pass has different impacts.","sidebar":"tutorialSidebar"},"manual/incremental-obfuscation-and-hotupdate":{"id":"manual/incremental-obfuscation-and-hotupdate","title":"Incremental Obfuscation and Hot Update","description":"Obfuz supports incremental obfuscation, with most Obfuscation Passes striving to maintain obfuscation stability.","sidebar":"tutorialSidebar"},"manual/installation":{"id":"manual/installation","title":"Installation","description":"Obfuz Unity Package Manager URL installation addresses:","sidebar":"tutorialSidebar"},"manual/menu":{"id":"manual/menu","title":"Editor Menu","description":"|Menu|Description|","sidebar":"tutorialSidebar"},"manual/method-body-obfuscation":{"id":"manual/method-body-obfuscation","title":"Method Body Obfuscation","description":"Method body obfuscation is actually called code obfuscation. Some Obfuscation Passes for method body obfuscation in Obfuz have unified rules, so they are introduced separately in this document.","sidebar":"tutorialSidebar"},"manual/obfuscation-instincts":{"id":"manual/obfuscation-instincts","title":"Obfuscation Instincts","description":"The Obfuz.ObfuscationInstincts class provides special functions to obtain obfuscation-related metadata information.","sidebar":"tutorialSidebar"},"manual/obfuscation-pass":{"id":"manual/obfuscation-pass","title":"Obfuscation Pass","description":"Obfuz supports multiple obfuscation algorithms. During obfuscation, each obfuscation algorithm is executed sequentially in a specific order, ultimately outputting the obfuscated assemblies. Since these obfuscation algorithms are executed in passes, we call them Obfuscation Passes.","sidebar":"tutorialSidebar"},"manual/reflection":{"id":"manual/reflection","title":"Reflection","description":"Symbol Obfuscation modifies the names of various metadata. This causes reflection lookups for types, functions, fields, etc. by name to fail.","sidebar":"tutorialSidebar"},"manual/remove-const-field":{"id":"manual/remove-const-field","title":"Remove Const Fields","description":"Const constant fields are meaningful mostly only in source code. When compiled to dll, access to constant fields is inlined, meaning the compiled code does not reference const fields.","sidebar":"tutorialSidebar"},"manual/run-obfuscation-standalonely":{"id":"manual/run-obfuscation-standalonely","title":"Run Obfuscation Standalone","description":"Sometimes it\'s necessary to run obfuscation outside of the build pipeline. For example, when using HybridCLR hot updates, you want to obfuscate the hot update code before releasing it.","sidebar":"tutorialSidebar"},"manual/serialization":{"id":"manual/serialization","title":"Serialization","description":"Symbol Obfuscation modifies the names of various metadata. Unity\'s built-in serialization mechanisms like MonoBehaviour, ScriptableObject, and JsonUtility heavily depend on metadata name information,","sidebar":"tutorialSidebar"},"manual/symbol-obfuscation":{"id":"manual/symbol-obfuscation","title":"Symbol Obfuscation","description":"Symbols refer to metadata with names in assemblies. Symbol obfuscation replaces the names of these symbols with obfuscated names while fixing all metadata that references these symbols to ensure reference correctness.","sidebar":"tutorialSidebar"},"manual/watermark":{"id":"manual/watermark","title":"Code Watermark","description":"Obfuz injects special metadata and specific instruction sequences into obfuscated assembly metadata to form identifiable watermark features.","sidebar":"tutorialSidebar"},"manual/xlua/work-with-xlua":{"id":"manual/xlua/work-with-xlua","title":"Working with XLua","description":"Obfuz can work well with xLua, but requires minor adjustments to xLua and additional registration code execution.","sidebar":"tutorialSidebar"}}}}')}}]);