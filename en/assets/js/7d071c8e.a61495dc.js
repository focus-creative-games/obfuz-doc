"use strict";(self.webpackChunkobfuz=self.webpackChunkobfuz||[]).push([[3180],{5299:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"manual/expr-obfuscation","title":"Expression Obfuscation","description":"Obfuscate expressions appearing in code to increase reverse engineering difficulty.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/manual/expr-obfuscation.md","sourceDirName":"manual","slug":"/manual/expr-obfuscation","permalink":"/en/docs/manual/expr-obfuscation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/manual/expr-obfuscation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Eval Stack Obfuscation","permalink":"/en/docs/manual/eval-stack-obfuscation"},"next":{"title":"Function Call Obfuscation","permalink":"/en/docs/manual/call-obfuscation"}}');var l=s(4848),i=s(8453);const r={},d="Expression Obfuscation",a={},o=[{value:"Supported Expression Types",id:"supported-expression-types",level:2},{value:"Supported Constant Types",id:"supported-constant-types",level:2},{value:"Settings",id:"settings",level:2},{value:"Rule Files",id:"rule-files",level:2},{value:"global",id:"global",level:3},{value:"assembly",id:"assembly",level:3},{value:"type",id:"type",level:3},{value:"method",id:"method",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"expression-obfuscation",children:"Expression Obfuscation"})}),"\n",(0,l.jsx)(n.p,{children:"Obfuscate expressions appearing in code to increase reverse engineering difficulty."}),"\n",(0,l.jsx)(n.h2,{id:"supported-expression-types",children:"Supported Expression Types"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Basic calculation expressions: add, sub, mul, div, neg"}),"\n",(0,l.jsx)(n.li,{children:"Basic bitwise calculation expressions: and, or, xor, not"}),"\n",(0,l.jsx)(n.li,{children:"Left shift or right shift calculation expressions: shl, shr"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"supported-constant-types",children:"Supported Constant Types"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"int, uint"}),"\n",(0,l.jsx)(n.li,{children:"long, ulong"}),"\n",(0,l.jsx)(n.li,{children:"float"}),"\n",(0,l.jsx)(n.li,{children:"double"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"settings",children:"Settings"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"ObfuzSettings.ExprObfusSettings"})," contains constant encryption related settings, detailed documentation can be found in ",(0,l.jsx)(n.a,{href:"./configuration",children:"Configuration"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"rule-files",children:"Rule Files"}),"\n",(0,l.jsxs)(n.p,{children:["By default, Obfuz encrypts all function calls, but also supports rule files to finely control the scope and effects of constant encryption. The ",(0,l.jsx)(n.code,{children:"ExprObfusSettings.RuleFiles"})," option can configure 0-N rule files.\nRule file relative paths are from the project directory, valid rule file paths look like: ",(0,l.jsx)(n.code,{children:"Assets/XXX/YYY.xml"}),"."]}),"\n",(0,l.jsx)(n.p,{children:"Configuration example:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n\n<obfuz>\n\n  <global obfuscationLevel="Basic" obfuscationPercentage="0.3">\n\n  </global>\n  \n  <assembly name="Obfus2">\n      <type name="*.TestNotObfusAnyMethods" obfuscationLevel="None"/>\n      <type name="*.TestObfusAll" obfuscationLevel="Advanced"/>\n      <type name="*.TestObfusSomeMethods" >\n          <method name="Foo" obfuscationLevel="MostAdvanced"/>\n      </type>\n  </assembly>\n</obfuz>\n'})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Top-level tag must be obfuz"}),"\n",(0,l.jsx)(n.li,{children:"Second-level tags can be global and assembly"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"global",children:"global"}),"\n",(0,l.jsx)(n.p,{children:"Global defines global default encryption parameters."}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Attribute"}),(0,l.jsx)(n.th,{children:"Nullable"}),(0,l.jsx)(n.th,{children:"Default"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"obfuscationLevel"}),(0,l.jsx)(n.td,{children:"Yes"}),(0,l.jsx)(n.td,{children:"None"}),(0,l.jsx)(n.td,{children:"Obfuscation level, can take values None, Basic, Advanced, MostAdvanced"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"obfuscationPercentage"}),(0,l.jsx)(n.td,{children:"Yes"}),(0,l.jsx)(n.td,{children:"0.5"}),(0,l.jsxs)(n.td,{children:["Obfuscation probability. Value range ",(0,l.jsx)(n.code,{children:"[0 - 1]"})]})]})]})]}),"\n",(0,l.jsx)(n.h3,{id:"assembly",children:"assembly"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Attribute"}),(0,l.jsx)(n.th,{children:"Nullable"}),(0,l.jsx)(n.th,{children:"Default"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"name"}),(0,l.jsx)(n.td,{children:"No"}),(0,l.jsx)(n.td,{}),(0,l.jsx)(n.td,{children:"Assembly name, must be in the obfuscated assembly list"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Others"}),(0,l.jsx)(n.td,{children:"Yes"}),(0,l.jsx)(n.td,{children:"Inherit same-named options from global"}),(0,l.jsx)(n.td,{children:"All options in global can be used, if not defined, inherit the value of same-named option in global"})]})]})]}),"\n",(0,l.jsx)(n.p,{children:"Assembly's child elements can only be type."}),"\n",(0,l.jsx)(n.h3,{id:"type",children:"type"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Attribute"}),(0,l.jsx)(n.th,{children:"Nullable"}),(0,l.jsx)(n.th,{children:"Default"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"name"}),(0,l.jsx)(n.td,{children:"No"}),(0,l.jsx)(n.td,{}),(0,l.jsx)(n.td,{children:"Type name wildcard string, if empty means match all types"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Others"}),(0,l.jsx)(n.td,{children:"Yes"}),(0,l.jsx)(n.td,{children:"Inherit same-named options from assembly"}),(0,l.jsx)(n.td,{children:"All options in global can be used, if not defined, inherit the value of same-named option in assembly"})]})]})]}),"\n",(0,l.jsx)(n.p,{children:"Since function calls can only appear in function code, type's child elements can only be method."}),"\n",(0,l.jsx)(n.h3,{id:"method",children:"method"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Attribute"}),(0,l.jsx)(n.th,{children:"Nullable"}),(0,l.jsx)(n.th,{children:"Default"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"name"}),(0,l.jsx)(n.td,{children:"No"}),(0,l.jsx)(n.td,{}),(0,l.jsx)(n.td,{children:"Type name wildcard string, if empty means match all types"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Others"}),(0,l.jsx)(n.td,{children:"Yes"}),(0,l.jsx)(n.td,{children:"Inherit same-named options from assembly"}),(0,l.jsx)(n.td,{children:"All options in global can be used, if not defined, inherit the value of same-named option in assembly"})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var t=s(6540);const l={},i=t.createContext(l);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);