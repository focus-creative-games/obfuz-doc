"use strict";(self.webpackChunkobfuz=self.webpackChunkobfuz||[]).push([[6145],{3353:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"manual/serialization","title":"Serialization","description":"Symbol Obfuscation modifies the names of various metadata. Unity\'s built-in serialization mechanisms like MonoBehaviour, ScriptableObject, and JsonUtility heavily depend on metadata name information,","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/manual/serialization.md","sourceDirName":"manual","slug":"/manual/serialization","permalink":"/en/docs/manual/serialization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/manual/serialization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Incremental Obfuscation and Hot Update","permalink":"/en/docs/manual/incremental-obfuscation-and-hotupdate"},"next":{"title":"Reflection","permalink":"/en/docs/manual/reflection"}}');var a=t(4848),s=t(8453);const o={},l="Serialization",r={},c=[{value:"Special Support for Unity Built-in Serialization",id:"special-support-for-unity-built-in-serialization",level:2},{value:"Special Support for Third-party Serialization Libraries like Newtonsoft.Json",id:"special-support-for-third-party-serialization-libraries-like-newtonsoftjson",level:2},{value:"Disable Symbol Obfuscation for Metadata",id:"disable-symbol-obfuscation-for-metadata",level:2}];function d(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsx)(i.h1,{id:"serialization",children:"Serialization"})}),"\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.a,{href:"./symbol-obfuscation",children:"Symbol Obfuscation"})," modifies the names of various metadata. Unity's built-in serialization mechanisms like MonoBehaviour, ScriptableObject, and JsonUtility heavily depend on metadata name information,\nso without special handling, these functions will not work properly after symbol obfuscation."]}),"\n",(0,a.jsx)(i.h2,{id:"special-support-for-unity-built-in-serialization",children:"Special Support for Unity Built-in Serialization"}),"\n",(0,a.jsx)(i.p,{children:"Obfuz is deeply integrated with Unity workflows and provides special handling for Unity's serialization mechanisms:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["Will not obfuscate type names and namespaces of MonoBehaviour, ScriptableObject, and types marked with ",(0,a.jsx)(i.code,{children:"[Serializable]"})," attribute"]}),"\n",(0,a.jsxs)(i.li,{children:["Will not obfuscate serialized fields of the above types, including private fields marked with ",(0,a.jsx)(i.code,{children:"[SerializedField]"})," attribute"]}),"\n",(0,a.jsx)(i.li,{children:"Will not obfuscate non-static public properties of the above types, but public static and non-public properties will still be obfuscated"}),"\n",(0,a.jsxs)(i.li,{children:["Will not obfuscate enum item names of enum types marked with ",(0,a.jsx)(i.code,{children:"[Serializable]"})," attribute"]}),"\n",(0,a.jsxs)(i.li,{children:["Will not obfuscate event functions with special purposes like ",(0,a.jsx)(i.code,{children:"Awake"}),", ",(0,a.jsx)(i.code,{children:"Start"})," in MonoBehavior"]}),"\n"]}),"\n",(0,a.jsxs)(i.p,{children:["However, Obfuz does not handle ",(0,a.jsx)(i.code,{children:"UnityEvent"})," fields on scene objects, so if callback functions for ",(0,a.jsx)(i.code,{children:"UnityEvent"})," type fields are set in the ",(0,a.jsx)(i.code,{children:"Inspector"}),", symbol obfuscation for these functions needs to be disabled,\notherwise runtime errors of not finding callback functions will occur."]}),"\n",(0,a.jsx)(i.h2,{id:"special-support-for-third-party-serialization-libraries-like-newtonsoftjson",children:"Special Support for Third-party Serialization Libraries like Newtonsoft.Json"}),"\n",(0,a.jsxs)(i.p,{children:["Adding the ",(0,a.jsx)(i.code,{children:"[Serializable]"})," attribute to types that need serialization has the following effects:"]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Type names, namespaces, public non-static fields, and public non-static member properties will not be obfuscated."}),"\n",(0,a.jsx)(i.li,{children:"Enum item names of enum types will not be obfuscated"}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"This default setting already satisfies most cases. If other requirements exist, symbol obfuscation for related metadata needs to be disabled."}),"\n",(0,a.jsx)(i.h2,{id:"disable-symbol-obfuscation-for-metadata",children:"Disable Symbol Obfuscation for Metadata"}),"\n",(0,a.jsx)(i.p,{children:"There are several ways:"}),"\n",(0,a.jsxs)(i.ol,{children:["\n",(0,a.jsxs)(i.li,{children:["Configure disabling ",(0,a.jsx)(i.code,{children:"Symbol Obfus"})," Pass for certain metadata in ",(0,a.jsx)(i.a,{href:"./obfuscation-pass",children:"Obfuscation Pass"}),"."]}),"\n",(0,a.jsxs)(i.li,{children:["Configure disabling symbol obfuscation for certain metadata in the rule files of ",(0,a.jsx)(i.a,{href:"./symbol-obfuscation",children:"Symbol Obfuscation"}),"."]}),"\n",(0,a.jsxs)(i.li,{children:["Add ",(0,a.jsx)(i.code,{children:"[ObfuzIgnore]"})," attribute to metadata that needs to disable symbol obfuscation in code, see documentation ",(0,a.jsx)(i.a,{href:"./customattributes",children:"Obfuz CustomAttributes"}),"."]}),"\n"]})]})}function u(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>o,x:()=>l});var n=t(6540);const a={},s=n.createContext(a);function o(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);