"use strict";(self.webpackChunkobfuz=self.webpackChunkobfuz||[]).push([[8123],{4008:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"beginner/configuration","title":"Custom Obfuscation Rules","description":"This example demonstrates how to configure obfuscation rule files. For the complete sample project, see CustomConfigure.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/beginner/configuration.md","sourceDirName":"beginner","slug":"/beginner/configuration","permalink":"/en/docs/beginner/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/beginner/configuration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Multiple Obfuscated Assemblies","permalink":"/en/docs/beginner/multi-assemblies-to-obfuscate"},"next":{"title":"Using Dynamic Secret Key","permalink":"/en/docs/beginner/dynamic-secret-key"}}');var i=s(4848),o=s(8453);const c={},l="Custom Obfuscation Rules",r={},a=[{value:"Modify EncryptionVM Settings",id:"modify-encryptionvm-settings",level:2},{value:"Modify Secret Settings",id:"modify-secret-settings",level:2},{value:"Modify Symbol Obfuscation Settings",id:"modify-symbol-obfuscation-settings",level:2},{value:"Modify Constant Encryption Settings",id:"modify-constant-encryption-settings",level:2},{value:"Modify Field Encryption Settings",id:"modify-field-encryption-settings",level:2},{value:"Modify Call Obfuscation Settings",id:"modify-call-obfuscation-settings",level:2},{value:"Generate Encryption Virtual Machine and Keys",id:"generate-encryption-virtual-machine-and-keys",level:2},{value:"Add Test Code",id:"add-test-code",level:2},{value:"Build &amp; Run",id:"build--run",level:2},{value:"View Obfuscated Assembly-CSharp Code",id:"view-obfuscated-assembly-csharp-code",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"custom-obfuscation-rules",children:"Custom Obfuscation Rules"})}),"\n",(0,i.jsxs)(n.p,{children:["This example demonstrates how to configure obfuscation rule files. For the complete sample project, see ",(0,i.jsx)(n.a,{href:"https://github.com/focus-creative-games/obfuz-samples/tree/main/CustomConfigure",children:"CustomConfigure"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"modify-encryptionvm-settings",children:"Modify EncryptionVM Settings"}),"\n",(0,i.jsxs)(n.p,{children:["Open the ",(0,i.jsx)(n.code,{children:"ObfuzSettings"})," window and locate the ",(0,i.jsx)(n.code,{children:"EncryptionVMSettings"})," section."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Change the CodeGenerationSecretKey field to a custom value"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"modify-secret-settings",children:"Modify Secret Settings"}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.code,{children:"ObfuzSettings"})," window, find the ",(0,i.jsx)(n.code,{children:"SecretSettings"})," section."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Change the DefaultStaticSecretKey field to a custom value"}),"\n",(0,i.jsx)(n.li,{children:"Change the DefaultDynamicSecretKey field to a custom value"}),"\n",(0,i.jsx)(n.li,{children:"Change the RandomSeed field to a custom integer value"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"modify-symbol-obfuscation-settings",children:"Modify Symbol Obfuscation Settings"}),"\n",(0,i.jsxs)(n.p,{children:["Create a ",(0,i.jsx)(n.code,{children:"symbol-obfuscation.xml"})," file in the ",(0,i.jsx)(n.code,{children:"Assets/Obfuz"})," directory, and add ",(0,i.jsx)(n.code,{children:"Assets/Obfuz/symbol-obfuscation.xml"})," to ",(0,i.jsx)(n.code,{children:"SymbolObfusSettings.RuleFiles"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The file content is as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n\n<obfuz>\n    <assembly name="Assembly-CSharp">\n      <type name="SymbolObfus.Test1" obName="0" applyToMembers="*"/> \x3c!-- Do not obfuscate Test1 class itself and all its members, including nested classes --\x3e\n    </assembly>\n</obfuz>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"modify-constant-encryption-settings",children:"Modify Constant Encryption Settings"}),"\n",(0,i.jsxs)(n.p,{children:["Create a ",(0,i.jsx)(n.code,{children:"const-encrypt.xml"})," file in the ",(0,i.jsx)(n.code,{children:"Assets/Obfuz"})," directory, and add ",(0,i.jsx)(n.code,{children:"Assets/Obfuz/const-encrypt.xml"})," to ",(0,i.jsx)(n.code,{children:"ConstEncryptSettings.RuleFiles"}),".\nThe content is as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n\n<obfuz>\n\n    <whitelist type="int-range">-100,100</whitelist> \x3c!-- Do not encrypt constants in the range [-100, 100] --\x3e\n    <whitelist type="string-length-range">,3</whitelist> \x3c!-- Do not encrypt strings with length \u2264 3 --\x3e\n    \n    <assembly name="Assembly-CSharp">\n        <type name="ConstEncrypt.Test1" disableEncrypt="1"/> \x3c!-- Disable constant encryption for all functions in Test1 class --\x3e\n        <type name="ConstEncrypt.Test2">\n            <method name="Sum3" disableEncrypt="1"/> \x3c!-- Do not encrypt constants in Sum3 function --\x3e\n        </type>\n    </assembly>\n</obfuz>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"modify-field-encryption-settings",children:"Modify Field Encryption Settings"}),"\n",(0,i.jsxs)(n.p,{children:["Create a ",(0,i.jsx)(n.code,{children:"field-encrypt.xml"})," file in the ",(0,i.jsx)(n.code,{children:"Assets/Obfuz"})," directory, and add ",(0,i.jsx)(n.code,{children:"Assets/Obfuz/field-encrypt.xml"})," to ",(0,i.jsx)(n.code,{children:"FieldEncryptSettings.RuleFiles"}),".\nThe content is as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n\n<obfuz>\n    <assembly name="Assembly-CSharp">\n        <type name="FieldEncrypt.Test1">\n            <field name="a" encrypt="1"/>\n        </type>\n    </assembly>\n</obfuz>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"modify-call-obfuscation-settings",children:"Modify Call Obfuscation Settings"}),"\n",(0,i.jsxs)(n.p,{children:["Create a ",(0,i.jsx)(n.code,{children:"call-obfuscation.xml"})," file in the ",(0,i.jsx)(n.code,{children:"Assets/Obfuz"})," directory, and add ",(0,i.jsx)(n.code,{children:"Assets/Obfuz/call-obfuscation.xml"})," to ",(0,i.jsx)(n.code,{children:"CallObfusSettings.RuleFiles"}),".\nThe content is as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n\n<obfuz>\n  <whitelist>\n    <assembly name="mscorlib" obfuscate="0"/>\n    <assembly name="UnityEngine.*" obfuscate="0"/>\n  </whitelist>\n  \n  <assembly name="Assembly-CSharp">\n      <type name="*CallObfus.Test1" disableObfuscation="1"/>\n      <type name="*CallObfus.Test2">\n          <method name="Run1" disableObfuscation="1"/>\n      </type>\n  </assembly>\n</obfuz>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"generate-encryption-virtual-machine-and-keys",children:"Generate Encryption Virtual Machine and Keys"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Run the menu ",(0,i.jsx)(n.code,{children:"Obfuz/GenerateEncryptionVM"})," to generate encryption virtual machine code. The default generated code file is ",(0,i.jsx)(n.code,{children:"Assets/Obfuz/GeneratedEncryptionVirtualMachine.cs"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Run the menu ",(0,i.jsx)(n.code,{children:"Obfuz/GenerateSecretKeyFile"})," to generate two key files. The default output files are ",(0,i.jsx)(n.code,{children:"Assets/Resources/Obfuz/defaultStaticSecretKey.bytes"})," and ",(0,i.jsx)(n.code,{children:"Assets/Resources/Obfuz/defaultDynamicSecretKey.bytes"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"add-test-code",children:"Add Test Code"}),"\n",(0,i.jsxs)(n.p,{children:["There are many files, please refer directly to ",(0,i.jsx)(n.a,{href:"https://github.com/focus-creative-games/obfuz-samples/tree/main/CustomConfigure",children:"CustomConfigure"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"build--run",children:"Build & Run"}),"\n",(0,i.jsxs)(n.p,{children:["Click ",(0,i.jsx)(n.code,{children:"Build And Run"})," in the ",(0,i.jsx)(n.code,{children:"Player Settings"})," window."]}),"\n",(0,i.jsx)(n.h2,{id:"view-obfuscated-assembly-csharp-code",children:"View Obfuscated Assembly-CSharp Code"}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.a,{href:"https://github.com/icsharpcode/ILSpy",children:"ILSpy"})," to open ",(0,i.jsx)(n.code,{children:"Library/Obfuz/{buildTarget}/ObfuscatedAssemblies/Assembly-CSharp.dll"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>l});var t=s(6540);const i={},o=t.createContext(i);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);